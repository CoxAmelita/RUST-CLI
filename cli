
**Code** (`src/main.rs`):
```rust
use std::env;
use std::fs::{self, File};
use std::io::{self, Write};
use std::path::Path;

fn list_files(path: &str) -> io::Result<()> {
    let entries = fs::read_dir(path)?;
    for entry in entries {
        let entry = entry?;
        println!("{}", entry.path().display());
    }
    Ok(())
}

fn copy_file(src: &str, dest: &str) -> io::Result<()> {
    fs::copy(src, dest)?;
    Ok(())
}

fn move_file(src: &str, dest: &str) -> io::Result<()> {
    fs::rename(src, dest)?;
    Ok(())
}

fn delete_file(path: &str) -> io::Result<()> {
    fs::remove_file(path)?;
    Ok(())
}

fn main() {
    let args: Vec<String> = env::args().collect();
    let command = &args[1];

    match command.as_str() {
        "list" => {
            if let Err(e) = list_files(".") {
                eprintln!("Error listing files: {}", e);
            }
        }
        "copy" => {
            if let Err(e) = copy_file(&args[2], &args[3]) {
                eprintln!("Error copying file: {}", e);
            }
        }
        "move" => {
            if let Err(e) = move_file(&args[2], &args[3]) {
                eprintln!("Error moving file: {}", e);
            }
        }
        "delete" => {
            if let Err(e) = delete_file(&args[2]) {
                eprintln!("Error deleting file: {}", e);
            }
        }
        _ => eprintln!("Invalid command"),
    }
}
